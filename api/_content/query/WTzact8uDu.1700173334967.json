{"_path":"/docus/single_tree","_dir":"docus","_draft":false,"_partial":false,"_locale":"","title":"Single Tree","description":"Let's have a single tree to organize all files related to content.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"single-tree"},"children":[{"type":"text","value":"Single Tree"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's have a single tree to organize all files related to content."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Today we need to "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"separate"}]},{"type":"text","value":" files in many folders:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"/content"}]},{"type":"text","value":" for files supported by nuxt content (md, json, yaml)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"/public"}]},{"type":"text","value":" for files not content aware (jpeg, wbep, svg, ...)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"some other folders of many file types related to other part of the platform (API, business logic design docs, file samples, ...)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Simplified example of multiple trees:"}]},{"type":"element","tag":"pre","props":{"code":"/\n├── content/\n│   ├── case1.md\n│   └── case2.md\n├── public/\n│   ├── case1/\n│   │   ├── check_step1.webp\n│   │   ├── check_step2.webp\n|   |   ├── sample1.pdf\n│   │   └── photo.webp\n│   └── case2/\n│       ├── check_step1.webp\n│       ├── check_step2.webp\n|       ├── sample2.pdf\n│       └── photo.webp\n└── pp-ref-common/\n    ├── customer1/\n    │   ├── sample1.pdf\n    │   ├── sample2.pdf\n    │   ├── sample3.pdf\n    │   ├── poc.ipynb\n    │   ├── dummy_checklist1.yaml\n    │   ├── dummy_checklist2.yaml\n    │   ├── case1.md\n    │   ├── case1/\n    │   │   ├── check_step1.webp\n    │   │   ├── check_step2.webp\n    │   │   └── photo.webp\n    │   ├── blueprint.penpot.svg\n    │   └── mvp.py\n    └── customer2/\n        ├── sample1.pdf\n        ├── sample2.pdf\n        ├── sample3.pdf\n        ├── poc.ipynb\n        ├── dummy_checklist1.yaml\n        ├── dummy_checklist2.yaml\n        ├── case2.md\n        ├── case2/\n        │   ├── check_step1.webp\n        │   ├── check_step2.webp\n        │   └── photo.webp\n        ├── blueprint.penpot.svg\n        └── mvp.py\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"/\n├── content/\n│   ├── case1.md\n│   └── case2.md\n├── public/\n│   ├── case1/\n│   │   ├── check_step1.webp\n│   │   ├── check_step2.webp\n|   |   ├── sample1.pdf\n│   │   └── photo.webp\n│   └── case2/\n│       ├── check_step1.webp\n│       ├── check_step2.webp\n|       ├── sample2.pdf\n│       └── photo.webp\n└── pp-ref-common/\n    ├── customer1/\n    │   ├── sample1.pdf\n    │   ├── sample2.pdf\n    │   ├── sample3.pdf\n    │   ├── poc.ipynb\n    │   ├── dummy_checklist1.yaml\n    │   ├── dummy_checklist2.yaml\n    │   ├── case1.md\n    │   ├── case1/\n    │   │   ├── check_step1.webp\n    │   │   ├── check_step2.webp\n    │   │   └── photo.webp\n    │   ├── blueprint.penpot.svg\n    │   └── mvp.py\n    └── customer2/\n        ├── sample1.pdf\n        ├── sample2.pdf\n        ├── sample3.pdf\n        ├── poc.ipynb\n        ├── dummy_checklist1.yaml\n        ├── dummy_checklist2.yaml\n        ├── case2.md\n        ├── case2/\n        │   ├── check_step1.webp\n        │   ├── check_step2.webp\n        │   └── photo.webp\n        ├── blueprint.penpot.svg\n        └── mvp.py\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We can't keep files together.\nWe have to put articles in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"content/**"}]},{"type":"text","value":"\nwhereas images and exotic files must be in "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"public/**"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We would like to set the Nuxt content source directly to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"pp-ref-common/"}]},{"type":"text","value":"\nwhere we can easily tell which files are articles/images\nor be ignored."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Maybe a set of rules telling how to traverse such a tree,\nwhat to keep, what to ignore.\nThose rules would be applied on each Nuxt generation."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:20.docus:single_tree.md","_source":"content","_file":"20.docus/single_tree.md","_extension":"md"}