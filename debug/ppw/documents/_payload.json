[{"data":1,"prerenderedAt":165},["Reactive",2],{"search-api":3},[4,11,19,28,38,44,52,59,66,74,81,88,95,102,110,117,124,138,145,151,158],{"id":5,"path":6,"dir":7,"title":8,"description":7,"keywords":9,"body":10},"content:0.index.md","/","","Home",[],"     Our vision of Docus present and future.   Our experiments with   Docus  to fit our needs\nin a very opinionated way.      Target scenario   S3 content backend   JSON-schema support  PDF file support  Exotic file type support  Custom nuxt layer   Nuxt Studio feedback   Nuxt UI pro migration  ",{"id":12,"path":13,"dir":14,"title":15,"description":7,"keywords":16,"body":18},"content:1.introduction:1.getting-started.md","/introduction/getting-started","introduction","Getting Started",[17],"TODO","  Getting Started  TODO   exotic format : PDF  exotic format : FEC, ifc, XML, ...  k8s deployment  vue/nuxt/content/docus/studio  painfull JS/TS stack (yarn/pnpm/bun)  static/SSR/hybrid/SPA/... mess, hard to understand",{"id":20,"path":21,"dir":7,"title":22,"description":7,"keywords":23,"body":27},"content:10.scenario:index.md","/scenario","Scenario",[24,25,26],"content authoring","webcomponent use","portal fork","  Scenario  content authoring  We need to write a lot of content.\nDocumentation but also knowledge articles.\n  Here is a sample rich content article  as it is written by non-developpers.  We use our components a lot in those articles thanks to MDC :   ::ppw-showcase-check\n---  \npdfs:\n- url: \"üåêpp/api/bucket/public/blog/2023_10_atelier/pu_edfb.pdf\"\n  check_result: \"üåêpp/api/bucket/public/blog/2023_10_atelier/cl_edf_20230524b.yaml\"\n  name: \"Facture EDF b\"\n  conversation:\n    - isabelle: \"1er pdf, la checklist indique que tout est Ok\"\n- url: \"üåêpp/api/bucket/public/blog/2023_10_atelier/pu_edfc.pdf\"\n  check_result: \"üåêpp/api/bucket/public/blog/2023_10_atelier/cl_edf_20230524c.yaml\"\n  name: \"Facture EDF c\"\n  conversation:\n    - isabelle: \"2√®me pdf, la checklist d√©c√©le une anomalie/non-conformit√© m√©tier. Si vous cliquez sur le blason, vous d√©couvrirez qu'il s'agit d'une erreur sur sur la cl√© publique de signature d'ELECTRICITE DE FRANCE, celle-ci n'a pas √©t√© trouv√©e.\" \n    - isabelle: \"C'est donc la 2√®me facture qui a √©t√© falsifi√©e\"                    \n---\n:: \n  A good visual editor is a must.\nParticulary when it comes to show helpfull error/warning messages to the author.   Here is a broken example  where the page is not showing up\nand no clear error message is given.  webcomponent use  TODO: describe here a scenario\nwhere we use some of our widgets as webcomponent in a simple HTML page.  portal fork  TODO: describe here a scenario\nwhere a user can fork our template project and inherit all the base features.  steps :   go to the github repo xxx  fork it  wait for the initial deployment  go to the site  click on the nuxt studio link on the github README  edit basic content  create a new doc schema  create document from the previous doc type with the text editor  create document from the previous doc type with the visual editor",{"id":29,"path":30,"dir":31,"title":32,"description":7,"keywords":33,"body":37},"content:10.scenario:sample_parcours.md","/scenario/sample_parcours","scenario","Sample broken",[34,35,36],"Bienvenue sur VerifTonDoc Express !","üëâ Interess√©, devenez contributeur","ü§îüí≠ Quelques h√©sitations","  Sample broken   Bienvenue sur VerifTonDoc Express !  Vous cherchez une solution pour v√©rifier vos documents en un seul clic, d√©celant pour vous les anomalies et garantissant la conformit√© des informations, alors   vous √™tes au bon endroit .  Explorons ensemble, une approche novatrice dans la v√©rification documentaire, o√π la facilit√© s'allie √† l'efficacit√©. Nous vous proposons de parcourir un trajet intuitif qui simplifie chaque √©tape, garantissant des documents v√©rifi√©s avec aisance et rapidit√©.  Vous √™tes en possesion de votre document pdf, c'est parfait. Vous avez juste √† vous rendre sur la pleteforme paxpar en cliquant   ici . Puis, fa√Ætes glisser votre document, sur la dropzone.  Si vous n'avez pas de documents PDFs √† port√©e de main, pas de probl√®me, t√©l√©charger ce document PDF de d√©monstration.  (pdf_link)  C'est gagn√© !!!\nVous pouvez savoir si votre document est conforme.   üëâ Interess√©, devenez contributeur  Si vous √™tes enthousiaste et inspir√© par ces exemples et que vous souhaitez exp√©rimenter avec vos propres documents, veuillez compl√©ter ce formulaire. En retour, vous b√©n√©ficierez de   2 heures de sessions gratuites  avec nos experts pour configurer notre plateforme.   Formulaire d'enregistrement \n1. D√©sposez les documents suivants\n     un document sign√© par vos soins (nom et adresse de la personne)    un document que vous souhaitez analyser   Quel est votre nom et votre pr√©nom ? (R√©ponse courte)\n  R√©ponse ici  Quel est votre num√©ro de t√©l√©phone ? (R√©ponse courte)   R√©ponse ici  Je m'identifie par     email    SMS    google    github    gitlab  Avez-vous des remarques ?\n  R√©ponse ici  Je valide     le partage de mes documents avec l'√©quipe support    les   CGVs  de paxpar     Je m'enregistre pour contribuer  Je m'enregistre pour cr√©er mon portail  ü§îüí≠ Quelques h√©sitations  Vous avez encore quelques h√©sitations, alors prenons un exemple tout simple : vous venez de recevoir une   facture EDF  par mail, tout vous semble correct.  Mais par acquis de conscience, vous pr√©f√©rez le v√©rifier;  En cliquant sur le fichier, il est alors s√©lectionn√© et la liste de contr√¥le s'affiche en pr√©cisant votre conformit√©. Vous avez la possibilit√© d'afficher le contenu du dossier, en cliquant sur l'oeil, en haut √† droite.   Ces points de contr√¥le sont flexibles et sont √©labor√©s en collaboration avec un expert du domaine, tel qu'un commissaire aux comptes ou un expert comptable.  Si vous √™tes un expert int√©ress√© par l'application de cette approche √† votre probl√®me, devenir contributeur de Paxpar est simple : il vous suffit de remplir le formulaire d'enregistrement, ci-dessus.  üëâ A l'issue de ces   2 sessions d'une heure gratuites , vous recevrez   votre premier article , comprenant des √©l√©ments interactifs, des astuces de cr√©ation, et une liste de v√©rification (pr√©sent√©s en format Markdown). Lors de la session, nous vous montrerons cet article en partage d'√©cran.  visualiser l'article  Cependant, si vous souhaitez r√©diger ou consulter des contenus sur votre propre site web, nous vous recommandons de passer au   WebTonDoc .    üßê Vous voulez en savoir plus ?       Signataire habilit√©  √† signer ce document   Chaque signataire √©quip√© d'une signature √©lectronique est associ√© √† une cl√© publique. Cette cl√© publique est exploit√©e pour assurer votre assurance que la personne qui signe correspond bien √† celle attendue.     Checklist  √† l'effigie de votre soci√©t√©   Vous voulez rassurer vos clients, en v√©rifiant des documents sensibles tels que des contrats, des factures, ... alors vous pouvez cr√©er votre propre checklist.    V√©rification crois√©e   (xls, png, pdf)   Votre dossier renferme des donn√©es de diff√©rentes sources : des tableaux d'analyse   au format excel , des photos   au format png , des rapports   au format pdf  et vous souhaitez croiser ces donn√©es, et ainsi v√©rifier leur coh√©rence.    Acc√®s aux   non-conformit√©s  en un click   En soumettant votre dossier, vous recevez imm√©diatement son degr√© de conformit√©, √©valu√© directement par vos propres experts, sur la base d'une liste de v√©rification pr√©-√©tablie.     V√©rification  d'un dossier digital   G√©rez, structurez, v√©rfiez et organisez des dossiers digitaux vous prend du temps, vous √™tes d√©sireux de gagner du temps sur ces t√¢ches chronophages. Alors commencez par cr√©er votre premier   dossier digital , puis tester-le, en le d√©posant simplement dans la drop-zone pr√©vue √† cet effet.     Ajout  d'un point de contr√¥le   Afin de rester en accord avec les changements r√©glementaires, vous avez la possibilit√© d'incorporer ces √©volutions directement dans vos listes de v√©rification. Notre √©quipe de support est disponible pour vous guider dans cette d√©marche de conformit√©.    Elaboration d'un   rapport de v√©rification   Si vous avez des pr√©occupations quant √† la bonne orientation de votre dossier et souhaitez t√©moigner de votre engagement, vous avez la possibilit√© de cr√©er un rapport de v√©rification r√©pertoriant toutes vos demandes, chacune dat√©e, pour d√©montrer votre transparence.    Essai   Gratuit/D√©monstration   Nous vous proposons de tester notre plateforme, en b√©n√©ficiant de   2h de sessions gratuites  avec nos experts, 3 communiqu√©s sur LinkedIn en co-r√©daction et 6 mois d'  abonnement gratuit .",{"id":39,"path":40,"dir":31,"title":41,"description":7,"keywords":42,"body":43},"content:10.scenario:sample_rich_content.md","/scenario/sample_rich_content","Sample rich content",[],"  Sample rich content      ",{"id":45,"path":46,"dir":47,"title":48,"description":49,"keywords":50,"body":51},"content:20.docus:bun.md","/docus/bun","docus","bun","Describe here the workflow with bun packet manager.",[],"  bun  Describe here the workflow with bun packet manager.  TODO: describe how to dev locally with the layer",{"id":53,"path":54,"dir":47,"title":55,"description":56,"keywords":57,"body":58},"content:20.docus:filter_ignore.md","/docus/filter_ignore","Filter / Ignore","YAML and JSON files are first class content payloads.",[],"  Filter / Ignore  YAML and JSON files are first class content payloads.  But YAML and JSON files can also be   opaque  assets not related to content.\nWe may think this is not a trouble to let those files be consumed as content payloads.\nBut in some cases they may be big and will probably clutter the content engine.  We would like to define which YAML/JSON should be ignored by the content engine.  We would also like to define a filter for intermediate cases where we want to keep a small part of the JSON/YAML payload as content.",{"id":60,"path":61,"dir":47,"title":62,"description":63,"keywords":64,"body":65},"content:20.docus:gitlab.md","/docus/gitlab","gitlab","Objective: Being able to deploy a docus instance on gitlab pages\nfrom a private repo and editing the whole thing trough nuxt studio.",[],"  gitlab  Objective: Being able to deploy a docus instance on gitlab pages\nfrom a private repo and editing the whole thing trough nuxt studio.  Why:   have a public site while keeping the repo private  don't rely on nuxt studio for deployment (see 2023-11-03 cloudflare outage)  Inspired from   gitlab nuxt example .  steps :    npx nuxi@latest init pp-front -t themes/docus  create   .gitlab-ci.yml  git commit/push to a private github repo  create github secret GITLAB_ACCESS_TOKEN  create personal access token or a fine-grained personal access token  create a synched gitlab repo, option   Run CI/CD for external repository  git commit/push to the private gitlab repo  static site should be deployed and running  mirror gitlab \u003C-> github",{"id":67,"path":68,"dir":47,"title":69,"description":70,"keywords":71,"body":73},"content:20.docus:json_schema.md","/docus/json_schema","JSON schema","See also JSON-schema (related to Nuxt studio):",[72],"$schema transform","  JSON schema  See also JSON-schema (  related to Nuxt studio ):  $schema transform  When defining a   new content transformer \nwe tell which extensions are involved.  It's fine to target single purpose file formats like '.xlsx' or '.csv'.\nBut it's not enough to set up a transformer for a special YAML or JSON based dialect.  We can use custom extension like   .checklist.yaml  but it would be better to detect the thoses files without modifiyng them.  For JSON/YAML special dialects it is very common to use the   $schema property .   $schema  filter  Expected new YAML/JSON schema transformer :     export   default   defineJSONSchemaTransformer  ({\n     name:   'my-dummy-transformer'  ,\n     schema:   '$schema: https://paxpar.tech/schema/mycheck/default/0'  ,\n     extensions: [\n       '.yaml'  ,\n       '.yml'  ,\n       '.json'  ,\n     ],\n     // ...\n   })\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":75,"path":76,"dir":47,"title":77,"description":78,"keywords":79,"body":80},"content:20.docus:layer.md","/docus/layer","custom layer","TODO:",[],"  custom layer  TODO:   add pp-widgets as a private layer  describe the pitfalls  add a public layer with working code",{"id":82,"path":83,"dir":47,"title":84,"description":85,"keywords":86,"body":87},"content:20.docus:s3.md","/docus/s3","S3 bucket","See also S3 bucket for nuxt studio.",[],"  S3 bucket  See also   S3 bucket for nuxt studio .  TODO:   Explore\nthe   nuxt sources configuration \nwhich is based on   unjs/unstorage \nwhich support S3 backend.  Use a S3 bucket as a nuxt content storage  Merge/mix nuxt content storage from filesystem and S3 bucket  Fetch nuxt content data from S3 bucket at runtime",{"id":89,"path":90,"dir":47,"title":91,"description":92,"keywords":93,"body":94},"content:20.docus:single_tree.md","/docus/single_tree","Single Tree","Let's have a single tree to organize all files related to content.",[],"  Single Tree  Let's have a single tree to organize all files related to content.  Today we need to   separate  files in many folders:    /content  for files supported by nuxt content (md, json, yaml)   /public  for files not content aware (jpeg, wbep, svg, ...)  some other folders of many file types related to other part of the platform (API, business logic design docs, file samples, ...)  Simplified example of multiple trees:   /\n‚îú‚îÄ‚îÄ content/\n‚îÇ   ‚îú‚îÄ‚îÄ case1.md\n‚îÇ   ‚îî‚îÄ‚îÄ case2.md\n‚îú‚îÄ‚îÄ public/\n‚îÇ   ‚îú‚îÄ‚îÄ case1/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ check_step1.webp\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ check_step2.webp\n|   |   ‚îú‚îÄ‚îÄ sample1.pdf\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ photo.webp\n‚îÇ   ‚îî‚îÄ‚îÄ case2/\n‚îÇ       ‚îú‚îÄ‚îÄ check_step1.webp\n‚îÇ       ‚îú‚îÄ‚îÄ check_step2.webp\n|       ‚îú‚îÄ‚îÄ sample2.pdf\n‚îÇ       ‚îî‚îÄ‚îÄ photo.webp\n‚îî‚îÄ‚îÄ pp-ref-common/\n    ‚îú‚îÄ‚îÄ customer1/\n    ‚îÇ   ‚îú‚îÄ‚îÄ sample1.pdf\n    ‚îÇ   ‚îú‚îÄ‚îÄ sample2.pdf\n    ‚îÇ   ‚îú‚îÄ‚îÄ sample3.pdf\n    ‚îÇ   ‚îú‚îÄ‚îÄ poc.ipynb\n    ‚îÇ   ‚îú‚îÄ‚îÄ dummy_checklist1.yaml\n    ‚îÇ   ‚îú‚îÄ‚îÄ dummy_checklist2.yaml\n    ‚îÇ   ‚îú‚îÄ‚îÄ case1.md\n    ‚îÇ   ‚îú‚îÄ‚îÄ case1/\n    ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ check_step1.webp\n    ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ check_step2.webp\n    ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ photo.webp\n    ‚îÇ   ‚îú‚îÄ‚îÄ blueprint.penpot.svg\n    ‚îÇ   ‚îî‚îÄ‚îÄ mvp.py\n    ‚îî‚îÄ‚îÄ customer2/\n        ‚îú‚îÄ‚îÄ sample1.pdf\n        ‚îú‚îÄ‚îÄ sample2.pdf\n        ‚îú‚îÄ‚îÄ sample3.pdf\n        ‚îú‚îÄ‚îÄ poc.ipynb\n        ‚îú‚îÄ‚îÄ dummy_checklist1.yaml\n        ‚îú‚îÄ‚îÄ dummy_checklist2.yaml\n        ‚îú‚îÄ‚îÄ case2.md\n        ‚îú‚îÄ‚îÄ case2/\n        ‚îÇ   ‚îú‚îÄ‚îÄ check_step1.webp\n        ‚îÇ   ‚îú‚îÄ‚îÄ check_step2.webp\n        ‚îÇ   ‚îî‚îÄ‚îÄ photo.webp\n        ‚îú‚îÄ‚îÄ blueprint.penpot.svg\n        ‚îî‚îÄ‚îÄ mvp.py\n  We can't keep files together.\nWe have to put articles in   content/** \nwhereas images and exotic files must be in   public/** .  We would like to set the Nuxt content source directly to   pp-ref-common/ \nwhere we can easily tell which files are articles/images\nor be ignored.  Maybe a set of rules telling how to traverse such a tree,\nwhat to keep, what to ignore.\nThose rules would be applied on each Nuxt generation.",{"id":96,"path":97,"dir":7,"title":98,"description":99,"keywords":100,"body":101},"content:30.nuxt_studio:0.index.md","/nuxt_studio","Feedback","Here are some pitfalls and wishes from our Nuxt Studio experience.",[],"  Feedback  Here are some pitfalls and wishes from our Nuxt Studio experience.",{"id":103,"path":104,"dir":105,"title":106,"description":107,"keywords":108,"body":109},"content:30.nuxt_studio:escape.md","/nuxt_studio/escape","nuxt_studio","escape key","While editing a file, pressing the escape key move up one level on editor/browser hierarchy.",[],"  escape key  While editing a file, pressing the escape key move up one level on editor/browser hierarchy.  In the editor this beheviour is misleading if you use mutiple cursors.\nThe common way to exit multiple cursors is also pressing the escape key.  To be sure to exit the multiple cursors, I tend to press the escape key even if I'm not in multiple cursor, resulting in exiting the editor.  We may restrict the escape key behaviour to file browser and not in the editor.",{"id":111,"path":112,"dir":105,"title":113,"description":114,"keywords":115,"body":116},"content:30.nuxt_studio:fork_easy.md","/nuxt_studio/fork_easy","Easy fork","On a single click, fork an existing github project and get :",[],"  Easy fork  On a single click, fork an existing github project and get :   a direct link from the README to nuxt studio  a running app via github pages  a new unique set of ID/API_KEY (generated on fork)  a new nuxt studio team  an auto-generated link to join the new nuxt studio team",{"id":118,"path":119,"dir":105,"title":120,"description":121,"keywords":122,"body":123},"content:30.nuxt_studio:git.md","/nuxt_studio/git","git","We may use a simple git repo as Nuxt Studio source backend.",[],"  git  We may use a simple git repo as Nuxt Studio source backend.  Currently Nuxt Studio uses github as its source backend.  We will lose a lot of feature specific to github.  This will open a lot of new usecases where github is not an option :   full open source git forge (gitlab, ...)  lightweight self hosted option (gitea, ...)  sovereign hosting  GAFAM/BATIX free hosting  private hosting for security  edge hosting for speed (huge git repo)  lower price  special free tier feature (gitlab private repo with public pages, ...)",{"id":125,"path":126,"dir":105,"title":127,"description":128,"keywords":129,"body":137},"content:30.nuxt_studio:json_schema.md","/nuxt_studio/json_schema","JSON-schema","Many features related to JSON-schema (some related to docus):",[130,131,132,133,134,135,136],"YAML file linter","front-matter schema","front-matter linter","YAML file visual editing","front matter visual editing","YAML file custom visual editing","front-matter custom visual editing","  JSON-schema  Many features related to JSON-schema (  some related to docus ):  YAML file linter  Use the   redhat YAML vscode extension  while editing YAML file content.\nIt lets you validate your JSON or YAML content against a predefined   schema .  It's a life saver when you deal with strongly typed JSON/YAML content.  With a single first comment pointing to your schema, the editor will check if your content is valid :     # yaml-language-server: $schema=https://paxpar.gitlab.io/schemas/checklist-2.0.schema.json\n   $schema  :   https://paxpar.gitlab.io/schemas/checklist-2.0.schema.json\n   name  :   Ordre d'intervention EDF\n   desc  :   Liste de v√©rification appliqu√©e lors de la saisie d'un ordre d'intervention\n   tags  :\n     -   atelier\n   owner  :\n     signature_pubkey  :   default\n  The schema URL could also be relative to the current project\nwhere schemas would be stored in   /public/schemas  :     # yaml-language-server: $schema=/schemas/checklist-2.0.schema.json\n   $schema  :   https://paxpar.gitlab.io/schemas/checklist-2.0.schema.json\n   name  :   Ordre d'intervention EDF\n   desc  :   Liste de v√©rification appliqu√©e lors de la saisie d'un ordre d'intervention\n   tags  :\n     -   atelier\n   owner  :\n     signature_pubkey  :   default\n  front-matter schema  Supporting a   $schema  native property\nin the   front matter \nwill provide a kind of strong typing of document metadata.     ---\n   $schema  :   https://paxpar.tech/schema/mycheck/default/0\n   name  :   Ordre d'intervention EDF\n   desc  :   Liste de v√©rification appliqu√©e lors de la saisie d'un ordre d'intervention\n   tags  :\n     -   atelier\n   owner  :\n     signature_pubkey  :   default\n   ---\n   \n   # My document\n   \n   Lorem ipsum ...\n  front-matter linter  Replicate the behaviour of the   redhat YAML vscode extension .\nIt lets you validate your JSON or YAML content against a predefined   schema .  Same feature as YAML file linter but restricted to the front-matter.  YAML file visual editing  TODO: describe/show our use of   JSON-editor  front matter visual editing  TODO: describe/show our use of   JSON-editor  YAML file custom visual editing  We may define visual component to edit typed YAML file.\nThe component will be registered to handle a given schema\nand will produce the JSON/YAML payload.  TODO: put an example here from pp  front-matter custom visual editing  We may define visual component to edit typed front matter.\nThe component will be registered to handle a given schema\nand will produce the JSON/YAML payload.  TODO: put an example here from pp  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":139,"path":140,"dir":105,"title":141,"description":142,"keywords":143,"body":144},"content:30.nuxt_studio:runtime_use.md","/nuxt_studio/runtime_use","runtime use","Use Nuxt Studio to edit live-content.",[],"  runtime use  Use Nuxt Studio to edit live-content.  Think of a webapp where some pages fetch data from live sources (mostly YAML/JSON¬ß/MD file in a S3 bucket).  Being able to edit those sources with Nuxt Studio without a full or partial site generation (when   hybrid rendering  is not an option).",{"id":146,"path":147,"dir":105,"title":84,"description":148,"keywords":149,"body":150},"content:30.nuxt_studio:s3.md","/nuxt_studio/s3","See also S3 bucket for docus.",[],"  S3 bucket  See also   S3 bucket for docus .  We may use a S3 bucket as Nuxt Studio source backend.  Currently Nuxt Studio uses github as its source backend.  Editing files in Nuxt Studio will result in direct S3 file operations.  s3 is better than git for   live   updates.  git is better than s3 for   traced   updates.",{"id":152,"path":153,"dir":7,"title":154,"description":155,"keywords":156,"body":157},"content:40.nuxt_ui:index.md","/nuxt_ui","Nuxt UI Pro","We are considering moving to nuxt ui pro.",[],"  Nuxt UI Pro  We are considering moving to nuxt ui pro.  As we understand it, nuxt ui pro is a nuxt layer\nthat you add to your project.\nIt provides components and dependencies.  We want to package our own components and dependencies (plus somes pages, layouts and static assets) the same way.  We will make a simple proof-of-concept based\non nuxt ui pro to assess the stack.  Here are the main features :    a shared nuxt layer project   pp-widgets    ‚úÖüíÄ defined as a nuxt layer  ‚úÖ‚ú® some shared nuxt pages  ‚úÖ‚ú® some shared nuxt layout  ‚úÖ‚ú® some shared nuxt composables  ‚úÖüö® some shared js/ts libraries  ‚úÖ‚ú® some shared nuxt components  üåÄüåÄ some shared nuxt components as web components  a starter project to fork   pp-front-starter    ‚úÖ‚ú® some md content files  ‚úÖüö® the only dep is pp-widgets  ‚úÖüö® full static generation  ‚úÖ‚ú® hosted on github/gitlab pages  ‚úÖüíÄ compatible with nuxt studio  dev env with good DX    ‚úÖüíÄ bun as the package manager  üåÄüåÄ some vitest unit tests  üåÄüåÄ some vitest e2e tests with playwright  ‚úÖ‚ú® CI/CD to github/gitlab  ‚úÖ‚ú® CI/CD to K8S  ‚úÖ‚ú® devpod/devcontainer setting  ‚úÖüíÄ easy switch to use local   pp-widgets   legend :\n‚úÖ‚ú® : already done / easy\n‚úÖüíÄ : done with errors, not mastered\n‚úÖüö® : done with some glitch/warning\nüåÄüåÄ : todo\n  Pending questions :   For a nuxt layer distribution, do I need to put license key in the target repo ?  For a webcomponent distribution, do I need to put license key in the target repo ?  Does the Nuxt UI pro templates provides a pre-configured vitest test set ?  Does the Nuxt UI pro templates provides a sample best-practices component we can use to start new component without any licensing issue ?  Is it possible to embed nuxt ui pro as a web component without any stling issues ?",{"id":159,"path":160,"dir":7,"title":161,"description":162,"keywords":163,"body":164},"content:80.todo.md","/todo","Todo","Log snippet when a YAML file is not valid :",[],"  Log snippet when a YAML file is not valid :     at executor (node_modules/unified/lib/index.js:901:20)\n  at Function.run (node_modules/unified/lib/index.js:884:19)\n  at executor (node_modules/unified/lib/index.js:737:12)\n  at new Promise (\u003Canonymous>)\n  at Function.process (node_modules/unified/lib/index.js:720:47)\n  at parseMarkdown (.nuxt/prerender/chunks/nitro/nitro-prerenderer.mjs:7887:41)\n  at async Object.parse (.nuxt/prerender/chunks/nitro/nitro-prerenderer.mjs:7985:20)\n  at async transformContent (.nuxt/prerender/chunks/nitro/nitro-prerenderer.mjs:8134:18)\n  at async parseContent (.nuxt/prerender/chunks/nitro/nitro-prerenderer.mjs:8610:18)\n  at async .nuxt/prerender/chunks/nitro/nitro-prerenderer.mjs:8580:22\n[error] [nitro] [unhandledRejection] bad indentation of a mapping entry (4:237)\n 1 |  ... \n 2 |  ... \n 3 |  ... \n 4 |  ...  au sein d'une m√™me entreprise :\n-----------------------------------------^\n 5 |  ... \n 6 |  ... \n  \n  1 |  ...\n  2 |  ...\n  3 |  ...\n  4 |  ...  au sein d'une m√™me entreprise :\n  -----------------------------------------^\n  5 |  ...\n  6 |  ...\n  at generateError (node_modules/js-yaml/dist/js-yaml.mjs:1273:10)\n  at throwError (node_modules/js-yaml/dist/js-yaml.mjs:1277:9)\n  at readBlockMapping (node_modules/js-yaml/dist/js-yaml.mjs:2272:7)\n  at composeNode (node_modules/js-yaml/dist/js-yaml.mjs:2531:12)\n  at readBlockSequence (node_modules/js-yaml/dist/js-yaml.mjs:2098:5)\n  at composeNode (node_modules/js-yaml/dist/js-yaml.mjs:2530:12)\n  at readBlockMapping (node_modules/js-yaml/dist/js-yaml.mjs:2254:11)\n  at composeNode (node_modules/js-yaml/dist/js-yaml.mjs:2531:12)\n  at readDocument (node_modules/js-yaml/dist/js-yaml.mjs:2715:3)\n  at loadDocuments (node_modules/js-yaml/dist/js-yaml.mjs:2778:5)\n  at Object.load$1 [as load] (node_modules/js-yaml/dist/js-yaml.mjs:2804:19)\n  Another  log snippet when a YAML file is not valid :   ‚Ñπ Vite server warmed up in 8170ms                                                                                     11:35:01 AM\n‚Ñπ ‚ú® optimized dependencies changed. reloading                                                                        11:35:01 AM\n‚Ñπ Vite client warmed up in 10346ms                                                                                    11:35:01 AM\n‚úî Nitro built in 2447 ms                                                                                        nitro 11:35:02 AM\nüê£üìÑ custom transformer for checkresult\nüê£üìÑ custom transformer for PDF\nüê£üìÑ custom transformer for ignored content\n[nitro] [unhandledRejection] YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key (12:1)\n\n  9 |     - valerie: Puis-je accepter ...\n 10 | \n 11 | Voyons tout d'abord ensemble qu ...\n 12 | \n------^\n    at generateError (file:///home/philippe/src/pp-front4/node_modules/js-yaml/dist/js-yaml.mjs:1273:10)\n    at throwError (file:///home/philippe/src/pp-front4/node_modules/js-yaml/dist/js-yaml.mjs:1277:9)\n    at readBlockMapping (file:///home/philippe/src/pp-front4/node_modules/js-yaml/dist/js-yaml.mjs:2235:9)\n    at composeNode (file:///home/philippe/src/pp-front4/node_modules/js-yaml/dist/js-yaml.mjs:2531:12)\n    at readDocument (file:///home/philippe/src/pp-front4/node_modules/js-yaml/dist/js-yaml.mjs:2715:3)\n    at loadDocuments (file:///home/philippe/src/pp-front4/node_modules/js-yaml/dist/js-yaml.mjs:2778:5)\n    at Object.load$1 [as load] (file:///home/philippe/src/pp-front4/node_modules/js-yaml/dist/js-yaml.mjs:2804:19)\n    at parseFrontMatter (file:///home/philippe/src/pp-front4/node_modules/remark-mdc/dist/index.mjs:37:21)\n    at getNodeData (file:///home/philippe/src/pp-front4/node_modules/remark-mdc/dist/index.mjs:1853:20)\n    at bindNode (file:///home/philippe/src/pp-front4/node_modules/remark-mdc/dist/index.mjs:1838:23) {\n  reason: 'can not read a block mapping entry; a multiline key may not be an implicit key',\n  mark: {\n    name: null,\n    buffer: '\\n' +\n      'animate: true\\n' +\n      'conversation:\\n' +\n      `    - valerie: \"En tant que particulier ou entreprise... Nous recevons de plus en plus de documents dans un format d√©mat√©rial\nis√© via notre boite e-mail personnelle, pro, et √©galement d'un service √† un autre au sein d'une m√™me entreprise :\"\\n` +\n      '    - valerie: Peut-on avoir confiance en ces documents ?\\n' +\n      '    - valerie: Recevoir ces documents d√©mat√©rialis√©s est-il un gage de fiabilit√© comparativement √† un document en version pap\nier ?\\n' +\n      '    - valerie: Nous allons voir 3 cas concrets de factures.\\n' +\n      '    - valerie: Puis-je avoir confiance en 2 de ces factures et les r√©gler en toute confiance ?\\n' +\n      '    - valerie: Puis-je accepter, sans me m√©fier, une facture EDF comme justificatif de domicile ?\\n' +\n      '\\n' +\n      \"Voyons tout d'abord ensemble quels sont les risques auxquels je m'expose.\\n\",\n    position: 786,\n    line: 11,\n    column: 0,\n    snippet: '  9 |     - valerie: Puis-je accepter ...\\n' +\n      ' 10 | \\n' +\n      \" 11 | Voyons tout d'abord ensemble qu ...\\n\" +\n      ' 12 | \\n' +\n      '------^'\n  }\n}\n",1701178753504]